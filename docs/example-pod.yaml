apiVersion: v1
kind: Pod
metadata:
  name: random-nginx-1
  labels:
    app.kubernetes.io/name: proxy
  annotations:
    opslevel.com/description: the first nginx service
    opslevel.com/owner: platform
    opslevel.com/lifecycle: beta
    opslevel.com/tier: tier_2
    opslevel.com/tags.hello: world
    selected_color: 'green'
spec:
  containers:
  - name: nginx
    image: nginx:stable
    ports:
      - containerPort: 50001
        name: http-web-svc-1
---
apiVersion: v1
kind: Pod
metadata:
  name: random-nginx-2
  labels:
    app.kubernetes.io/name: proxy
  annotations:
    opslevel.com/description: the second nginx service
    opslevel.com/owner: platform
    opslevel.com/lifecycle: beta
    opslevel.com/tier: tier_2
    opslevel.com/tags.hello: world
    selected_color: 'turquoise' # invalid value (validation rules - expects enum)
spec:
  containers:
  - name: nginx
    image: nginx:stable
    ports:
      - containerPort: 50002
        name: http-web-svc-2
---
apiVersion: v1
kind: Pod
metadata:
  name: random-nginx-3
  labels:
    app.kubernetes.io/name: proxy
  annotations:
    opslevel.com/description: the third nginx service
    opslevel.com/owner: platform
    opslevel.com/lifecycle: beta
    opslevel.com/tier: tier_2
    opslevel.com/tags.hello: world
    key1key2: '{"key1": "val1", "key2": "val2"}'
spec:
  containers:
  - name: nginx
    image: nginx:stable
    ports:
      - containerPort: 50003
        name: http-web-svc-3
---
apiVersion: v1
kind: Pod
metadata:
  name: random-nginx-4
  labels:
    app.kubernetes.io/name: proxy
  annotations:
    opslevel.com/description: the fourth nginx service
    opslevel.com/owner: platform
    opslevel.com/lifecycle: beta
    opslevel.com/tier: tier_2
    opslevel.com/tags.hello: world
    key1key2: 'hello world' # invalid value (wrong type - expects object)
spec:
  containers:
    - name: nginx
      image: nginx:stable
      ports:
        - containerPort: 50004
          name: http-web-svc-4